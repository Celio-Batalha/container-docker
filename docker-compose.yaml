services:

  # php server
  app:
    container_name: app
    build:
      context: .
      target: php
    working_dir: /var/www/app
    volumes:
      - ./:/var/www/html
    ports:
      - '8000:80'
      # - '${APP_PORT:-80}:80'
      # - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    depends_on:
      # - redis
      - db
    restart: unless-stopped
    networks:
      - estage

  # Database service
  db:
    image: 'mysql:8.4'
    container_name: db
    ports:
      - '3307:3306'
    restart: always
    tty: true
    environment:
      # MYSQL_DATABASE: ${DB_DATABASE}
      # MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'db-data:/var/lib/mysql'
      # - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - estage

  # Servidor web Nginx
  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    restart: always
    tty: true
    ports:
      - "8080:80"
    # volumes:
    #   - ./public:/var/www/html
    #   - ./logs:/var/log/nginx
    networks:
      - estage

 # Redis service
  # redis:
    # image: 'redis:alpine'
    # ports:
    #     - '6379:6379'
    # volumes:
    #     - 'db-redis:/data'
    # networks:
    #     - estage
    # healthcheck:
    #     test:
    #         - CMD
    #         - redis-cli
    #         - ping
    #     retries: 3
    #     timeout: 5s

volumes:
  # db-redis: ~
  db-data: ~

networks:
  estage:
    driver: bridge
